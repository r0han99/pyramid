#!/bin/bash

RED='\033[0;31m'
NC='\033[0m'
GREEN='\033[0;33m'

if [ -f /usr/local/bin/projectstack.csv ]
then

    if [ "$1" == "--set" ]
    then
        if [ "$#" == 2 ]
        then
            python3 /usr/local/bin/pyramidpy.py "$@"
        else
            python3 /usr/local/bin/pyramidpy.py "$@"
        fi

    elif [ "$#" == 0 ]
    then

        python3 /usr/local/bin/pyramidpy.py "--show-stack"


    elif [ "$1" == "--short" ] || [ "$1" == "s" ]
    then

        python3 /usr/local/bin/pyramidpy.py "--show-stack" "--simple"
        

    elif [ "$1" == "--fstack" ] || [ "$1" == "f" ]
    then
           
            python3 /usr/local/bin/pyramidpy.py "--show-stack" "-fstack"
    

    elif [ "$1" == "--update" ]
    then

            python3 /usr/local/bin/pyramidpy.py "$1"


    elif [ "$1" == "--chdir" ] || [ "$1" == "cd" ]
    then
      
             if [ "$#" == 2 ]
            then
                  
                if [ ${#2} -eq 4 ]
                then
                    search=$(egrep $2 /usr/local/bin/projectstack.csv | cut -d ',' -f 2)
                    cd $search  
                elif [[ $2 =~ [a-z] ]]
                then
                    search=$(egrep -i $2 /usr/local/bin/projectstack.csv | cut -d ',' -f 2)
                    cd $search

                else
                    echo -e "${RED}Invalid Hex-ID, ${NC}${GREEN}{chdir}${NC}"
                    echo -e "do pyramid ${GREEN}--show-stack${NC} to display Hex-Id's."
                fi
            
            else
                echo ""
                var=$(cat /usr/local/bin/projectstack.csv | cut -d ',' -f 2 | sed -n '2p')
                cd $var
            
             fi 
     
    elif [ "$1" == "--tree" ]
    then
        
            if [ "$#" == 2 ]
            then
                if [ ${#2} -eq 4 ]
                then
                    search=$(egrep $2 /usr/local/bin/projectstack.csv | cut -d ',' -f 2)
                    echo -e ${GREEN}$2" - Directory Tree"${NC}
                    tree $search
                
                elif [[ $2 =~ [a-z] ]]
                then
                    search=$(egrep -i $2 /usr/local/bin/projectstack.csv | cut -d ',' -f 2)
                    tree $search
                
                else
                    echo -e "${RED}Invalid Hex-ID, ${NC}${GREEN}{tree}${NC}"
                    echo -e "do pyramid ${GREEN}--show-stack${NC} to display Hex-Id's."
                fi

            else
                lines=$(wc -l /usr/local/bin/projectstack.csv | awk '{ print $1 }')
                if [[ "$lines" -gt 1 ]]
                then
                    var=$(cat /usr/local/bin/projectstack.csv | cut -d ',' -f 2 | sed -n '2p' | xargs echo) ; echo -e "${GREEN}[HEAD Project Tree] ~ ${NC}"
                    tree $var
                else
                    echo "project stack is currently empty."
                fi
            fi
       

    elif [ "$1" == "--pop" ]
    then
        python3 /usr/local/bin/pyramidpy.py "$1"

    elif [ "$1" == "--push" ]
    then
        python3 /usr/local/bin/pyramidpy.py "$@"

    elif [ "$1" == "--open" ]
    then
        
        
            if [ "$#" == 2 ]
            then
                if [ ${#2} -eq 4 ]
                then
                    search=$(egrep $2 /usr/local/bin/projectstack.csv | cut -d ',' -f 2)
                    open $search  
                
                elif [[ $2 =~ [a-z] ]]
                then
                    search=$(egrep -i $2 /usr/local/bin/projectstack.csv | cut -d ',' -f 2)
                    open $search
                
                else
                    echo -e "${RED}Invalid Hex-ID, ${NC}${GREEN}{open}${NC}"
                    echo -e "do pyramid ${GREEN}--show-stack${NC} to display Hex-Id's."
                fi
            
            else
                var=$(cat /usr/local/bin/projectstack.csv | cut -d ',' -f 2 | sed -n '2p' | xargs echo)
                open $var
            fi
       
        


    elif [ "$1" == "--help" ] || [ "$1" == "-h" ]
    then
        python3 /usr/local/bin/pyramid-help.py
        
    else
        echo -e "${RED}Invalid options, try ${GREEN}--help | -h${NC}${RED} for assistance.${NC}"
    fi



else
    echo -e "${RED}No projectstack found."
    echo -e "${GREEN}creating one ..${NC}"
    touch /usr/local/bin/projectstack.csv
    echo -e "${GREEN}Project Stack Established!.${NC}"
    python3 /usr/local/bin/pyramidpy.py --set



fi
